Once upon a time, there was a group of students who were working on a project to design a gaming platform. They had a 2D grid of N * N size which represented the game board. Each cell of the grid had some data associated with it.

One day, they encountered a problem where they had to shift the elements of the grid row-wise in clock wise direction by a certain number of positions, k. This was necessary to create a more interesting and challenging gaming experience for their users.

The students decided to write a Java program to solve this problem. They came up with an algorithm to shift the elements of the grid row-wise by k positions. After implementing the algorithm, they were able to shift the elements of each row by k positions.

Write a program that shift each row of matrix by k.

Input Format

First line contains integer N depicting the size of matrix.

Second line contains N * N Integer values, depicting all the elements of matrix.

Third line contains integer k depicting the shift the matrix row-wise by k.

Constraints

1 <= N <= 1000
1 <= mat[i][j] <= 1000
Output Format

Return the matrix after shifting.

Sample Input 0

3
0 5 9
2 7 5
2 3 3
2
Sample Output 0

9 0 5 
5 2 7 
3 2 3 
Explanation 0

print the matrix After shifting by 2
========================================================================================================================================================================================================
solution
import java.io.*;
import java.util.*;

public class Solution {
public static void print2D(int [][]A){
    for(int[] d:A){
        for(int e:d){
            System.out.print(e+" ");
        }
      System.out.println();
    }
}
    public static void reverse(int[]d,int i,int j){
        while(i < j){
            int tmp = d[i];
            d[i]=d[j];
            d[j]=tmp;
            i++;
            j--;
        }
        
        
    }
    
public static void rotate(int[]d,int k){
    k=k%d.length;
    reverse(d,0,k-1);
    reverse(d,k,d.length-1);
    reverse(d,0,d.length-1);
    
}
public static void main(String[] args) {
       Scanner scn = new Scanner (System.in);
        int n = scn.nextInt();
        int [][] A = new int [n][n];
        for(int i = 0 ;i < n;i++){
            for(int j =0 ; j < n;j++){
                A[i][j]=scn.nextInt();
            }
        }
            int k = scn.nextInt();
         for(int[] d : A){
             rotate(d,k);
         }
        print2D(A);
    }
    }
