Given an array of integers nums, calculate the pivot index of this array.

The pivot index is the index where the sum of all the numbers strictly to the left of the index is equal to the sum of all the numbers strictly to the index's right.

If the index is on the left edge of the array, then the left sum is 0 because there are no elements to the left. This also applies to the right edge of the array.

Return the leftmost pivot index. If no such index exists, return -1.

Input Format

First line contains integer N representing size of array.

Second line contains N integer representing elements of array.

Constraints

1 <= N <= 10^4

-1000 <= nums[i] <= 1000
Output Format

Return one integer that will be the index

Sample Input 0

6
1 7 3 6 5 6
Sample Output 0

3
Explanation 0

The pivot index is 3.
Left sum = nums[0] + nums[1] + nums[2] = 1 + 7 + 3 = 11 Right sum = nums[4] + nums[5] = 5 + 6 = 11

Sample Input 1

 3
 2 1 -1
Sample Output 1

0
=======================================================================================================================

Solution =

 Scanner scn = new Scanner (System.in);
        int n = scn.nextInt();
        int A[]= new int[n];
        
        for(int i = 0;i < n;i++){
            A[i]=scn.nextInt();
        }
        int left[] =new int[n];
        left[0]=0;
        for(int i= 1;i < n;i++){
        left[i]=left[i-1]+A[i-1];
        }
    int right[] =new int[n];
        right[n-1]=0;
        for(int i= n-2;i >= 0;i--){
        right[i]=right[i+1]+A[i+1];}
          
        int ans = -1;
        for(int i = 0 ;i < n;i++){
            if(left[i] ==right[i]){
                ans = i;
              break;}
        }
        
        System.out.println(ans);
    }
}
